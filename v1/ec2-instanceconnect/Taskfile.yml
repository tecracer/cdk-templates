# https://taskfile.dev

version: '2'

tasks:

  build:
    sources:
      - lib/*.ts
      - bin/*.ts
    generates:
      - lib/getip.js
      - ib/single-instance-stack.js
      - bin/single-instance.js
    cmds:
      - npm run build

  enable-imdsv2:
    desc: Enable imdbv2
    cmds:
      - aws ec2 modify-instance-metadata-options --instance-id {{.INSTANCEID}} --http-endpoint enabled --http-token required

  disable-imdsv2:
    desc: Disable imdbv2
    cmds:
      - aws ec2 modify-instance-metadata-options --instance-id {{.INSTANCEID}}  --http-endpoint enabled --http-token optional

  show:
    desc: show variables
    cmds:
      - echo InstanceID - {{.INSTANCEID}}
      - echo Deployment Bucket - {{.DEPLOYMENTBUCKET}}
      - aws ec2 describe-instances --instance-ids {{.INSTANCEID}} --query 'Reservations[0].Instances[0].MetadataOptions'

    silent: true
  
  connect:
    desc: Connect to instance
    cmds:
      - mssh {{.INSTANCEID}}

# CDK tasks


  update:
    desc: install latest cdk and other modules
    cmds:
      - ncu -u
      - npm install

  deploy:
    desc: deploy stack without asking
    deps: [build]
    cmds:
      - cmd: echo Profile $AWSUME_PROFILE
        silent: true
      - cdk deploy {{.STACK}} --require-approval never --profile $AWSUME_PROFILE

  destroy:
    desc: destroy stack without asking
    cmds:
      - cmd: echo Profile $AWSUME_PROFILE
        silent: true
      - cdk destroy "*" --force --profile $AWSUME_PROFILE


  diff:
    desc: cdk diff inl. tsc
    deps: [build]
    cmds:
      - cdk diff {{.STACK}}


  edge-of-tomorrow:
    desc: deploy destroy repeat
    cmds:
      - task: update
      - task: deploy
      - task: destroy
  
